// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeature = ["relationMode"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String
  name String?
  username String @unique
  password String
  profileImage String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Refresh token
  refreshToken RefreshToken[]

  // Tweet
  tweet Tweet[]

  // MediaFiles
  mediaFiles MediaFile[]
}

model RefreshToken {
  id String @id @default(auto()) @map("_id") @db.ObjectId 
  token String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id])
}

model Tweet {
  id String @id @default(auto()) @map("_id") @db.ObjectId 
  text String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Author
  author User @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId

  replyToId String? @db.ObjectId
  replyTo Tweet? @relation("replies", fields: [replyToId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replies Tweet[] @relation("replies")

  // MediaFiles
  mediaFiles MediaFile[]
}

model MediaFile {
  id String @id @default(auto()) @map("_id") @db.ObjectId 
  url String
  providerPublicId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Belongs to User
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  // Belongs to Tweet
  tweet Tweet? @relation(fields: [tweetId], references: [id])
  tweetId String? @db.ObjectId
}